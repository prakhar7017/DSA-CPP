// https://www.geeksforgeeks.org/problems/fixed-two-nodes-of-a-bst/1

class Solution {
    private:
     Node* first;
     Node* prev;
     Node* middle;
     Node* last;
     
    private:
    void inorder(Node* root){
        if(root==NULL) return;
        inorder(root->left);
        // business 
        if((prev!=NULL) && (root->data < prev->data) ){
            if(first==NULL){
                first=prev;
                middle=root;
            }else{
                last=root;
            }
            
        }
        prev=root;
        inorder(root->right);
    }
  public:
    void correctBST(Node* root) {
        first=middle=last=NULL;
        prev=new Node(INT_MIN);
        inorder(root);
        if(first && last){
            swap(first->data,last->data);
        }else{
            swap(first->data,middle->data);
        }
    }
};

time complexity: O(n)
space complexity: O(1)
